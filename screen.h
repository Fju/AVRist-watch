#ifndef DISPLAY_H
#define DISPLAY_H

#include "i2c_master.h"
#include <stdint.h>
#include <stdbool.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define BUFFER_SIZE 1024
#define SCREEN_ADDR 0x7A // 0x3D << 1

#define SCREEN_MEMORYMODE          0x20 ///< See datasheet
#define SCREEN_COLUMNADDR          0x21 ///< See datasheet
#define SCREEN_PAGEADDR            0x22 ///< See datasheet
#define SCREEN_DEACTIVATE_SCROLL   0x2E

#define SCREEN_SETLOWCOLUMN        0x00 ///< Not currently used
#define SCREEN_SETHIGHCOLUMN       0x10 ///< Not currently used
#define SCREEN_SETSTARTLINE        0x40 ///< See datasheet

#define SCREEN_SETCONTRAST         0x81 ///< See datasheet
#define SCREEN_CHARGEPUMP          0x8D ///< See datasheet
#define SCREEN_SEGREMAP            0xA0 ///< See datasheet
#define SCREEN_DISPLAYALLON_RESUME 0xA4 ///< See datasheet
#define SCREEN_DISPLAYALLON        0xA5 ///< Not currently used
#define SCREEN_NORMALDISPLAY       0xA6 ///< See datasheet
#define SCREEN_INVERTDISPLAY       0xA7 ///< See datasheet
#define SCREEN_SETMULTIPLEX        0xA8 ///< See datasheet
#define SCREEN_DISPLAYOFF          0xAE ///< See datasheet
#define SCREEN_DISPLAYON           0xAF ///< See datasheet
#define SCREEN_COMSCANINC          0xC0 ///< Not currently used
#define SCREEN_COMSCANDEC          0xC8 ///< See datasheet
#define SCREEN_SETDISPLAYOFFSET    0xD3 ///< See datasheet
#define SCREEN_SETDISPLAYCLOCKDIV  0xD5 ///< See datasheet
#define SCREEN_SETPRECHARGE        0xD9 ///< See datasheet
#define SCREEN_SETCOMPINS          0xDA ///< See datasheet
#define SCREEN_SETVCOMDETECT       0xDB ///< See datasheet

#define WIRE_MAX 32

 
#include <avr/pgmspace.h>

static const uint8_t PROGMEM number_bitmap[] = {
0x0, 0x3f, 0x0, 0xf0, 0x3f, 0x0, 0xff, 0x3f, 0xe0, 0x87, 0x1f, 0x78, 0x80, 0x7, 0x1f, 0xc0, 0xc3, 0x3, 0xf0, 0xf8, 0x0, 0x7e, 0x1e, 0x80, 0x9f, 0x7, 0xf0, 0xe7, 0x1, 0xfe, 0x3d, 0x80, 0xf3, 0xf, 0xf0, 0xfc, 0x3, 0x1e, 0xff, 0x80, 0xc3, 0x3f, 0xf0, 0xf0, 0xf, 0x1c, 0xfc, 0x83, 0x3, 0xff, 0xf0, 0xc0, 0x3f, 0x1c, 0xf0, 0x8f, 0x3, 0xfc, 0xf3, 0x80, 0xef, 0x1c, 0xe0, 0xf9, 0x7, 0x78, 0xfe, 0x0, 0x9e, 0x1f, 0xc0, 0xc7, 0x7, 0xf0, 0xf0, 0x1, 0x3e, 0x78, 0x80, 0x7, 0x7e, 0xf8, 0x1, 0xff, 0x3f, 0x0, 0xff, 0x3, 0x0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0xe0, 0x7, 0x0, 0xfc, 0x1, 0xc0, 0x7f, 0x0, 0xfc, 0x1e, 0x80, 0x8f, 0x7, 0xe0, 0xe1, 0x1, 0x18, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x80, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xf8, 0xff, 0x3f, 0x0, 0x7f, 0x0, 0xfc, 0x7f, 0x80, 0xff, 0x3f, 0xe0, 0x83, 0x1f, 0x18, 0x80, 0xf, 0x0, 0xc0, 0x3, 0x0, 0xf0, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xc0, 0x3, 0x0, 0x78, 0x0, 0x0, 0x1f, 0x0, 0xc0, 0x3, 0x0, 0x78, 0x0, 0x0, 0x1f, 0x0, 0xe0, 0x3, 0x0, 0x78, 0x0, 0x0, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0x80, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x1e, 0x0, 0xc0, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xc0, 0xff, 0xff, 0xf1, 0xff, 0x7f, 0xfc, 0xff, 0x1f, 0xc0, 0x3f, 0x0, 0xfe, 0x3f, 0x80, 0xff, 0x1f, 0xe0, 0xc1, 0xf, 0x8, 0xc0, 0x3, 0x0, 0xf0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0xfc, 0x7, 0x0, 0xff, 0x1, 0xc0, 0xff, 0x1, 0x0, 0xfc, 0x1, 0x0, 0x78, 0x0, 0x0, 0x3c, 0x0, 0x0, 0x1f, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x3c, 0xc, 0x80, 0x7, 0x1f, 0xf8, 0xc1, 0xff, 0x1f, 0xf0, 0xff, 0x3, 0xe0, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x0, 0x0, 0x1f, 0x0, 0xe0, 0x7, 0x0, 0xf8, 0x1, 0x0, 0x7f, 0x0, 0xe0, 0x1f, 0x0, 0xf8, 0x7, 0x0, 0xff, 0x1, 0xe0, 0x7b, 0x0, 0x78, 0x1e, 0x0, 0x9f, 0x7, 0xc0, 0xe3, 0x1, 0x78, 0x78, 0x0, 0x1f, 0x1e, 0xc0, 0x83, 0x7, 0xf8, 0xe0, 0x1, 0x1f, 0x78, 0xc0, 0x3, 0x1e, 0xf8, 0x80, 0x7, 0x1f, 0xe0, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x0, 0x0, 0xfe, 0xff, 0x83, 0xff, 0xff, 0xe0, 0xff, 0x3f, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0xf8, 0xf, 0x0, 0xfe, 0x1f, 0x80, 0xff, 0x1f, 0x0, 0xe0, 0xf, 0x0, 0xe0, 0x7, 0x0, 0xe0, 0x3, 0x0, 0xf0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0xc0, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x3e, 0xc, 0xc0, 0x7, 0xf, 0xfc, 0xc0, 0xff, 0x1f, 0xf0, 0xff, 0x3, 0xc0, 0x1f, 0x0, 0x0, 0xfc, 0x3, 0xc0, 0xff, 0x3, 0xfc, 0xff, 0x80, 0x1f, 0x38, 0xf0, 0x1, 0x8, 0x3c, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xc0, 0x3, 0x0, 0xf8, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x3f, 0xe0, 0xf1, 0x3f, 0x78, 0xfe, 0x1f, 0xde, 0x83, 0x8f, 0x3f, 0xc0, 0xe7, 0x7, 0xe0, 0xf9, 0x1, 0xf8, 0x3e, 0x0, 0xbc, 0xf, 0x0, 0xef, 0x3, 0xc0, 0xf3, 0x0, 0xf0, 0x3c, 0x0, 0x3c, 0xf, 0x80, 0x8f, 0x7, 0xe0, 0xe1, 0x1, 0x7c, 0xf0, 0x0, 0xf, 0xfc, 0xf0, 0x1, 0xfe, 0x3f, 0x0, 0xff, 0x7, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0x0, 0x0, 0x3c, 0x0, 0x0, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x7c, 0x0, 0x80, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x7c, 0x0, 0x80, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x7c, 0x0, 0x80, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x3c, 0x0, 0x80, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x7c, 0x0, 0x0, 0xf, 0x0, 0xc0, 0x3, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0x1e, 0x0, 0x80, 0x7, 0x0, 0xe0, 0x1, 0x0, 0x0, 0x7f, 0x0, 0xf0, 0x7f, 0x0, 0xff, 0x3f, 0xe0, 0x83, 0x1f, 0x78, 0x80, 0xf, 0xf, 0xc0, 0xc3, 0x3, 0xf0, 0xf0, 0x0, 0x3c, 0x3c, 0x0, 0xf, 0x1f, 0xe0, 0x81, 0xf, 0x78, 0xe0, 0x7, 0xf, 0xf0, 0xe3, 0x1, 0xf8, 0x3f, 0x0, 0xfc, 0x7, 0x0, 0xfe, 0x0, 0xc0, 0xff, 0x0, 0xf8, 0x7e, 0x0, 0x1f, 0x3f, 0xe0, 0x83, 0x1f, 0x7c, 0xc0, 0xf, 0xf, 0xe0, 0xe3, 0x3, 0xf0, 0x79, 0x0, 0x78, 0x1e, 0x0, 0x9e, 0x7, 0x80, 0xe7, 0x1, 0xe0, 0xf9, 0x0, 0x7c, 0x7c, 0x80, 0xf, 0x7f, 0xf0, 0x81, 0xff, 0x7f, 0x80, 0xff, 0x7, 0x80, 0x7f, 0x0, 0x80, 0x1f, 0x0, 0xf8, 0x3f, 0x80, 0xff, 0x1f, 0xe0, 0xc3, 0xf, 0x3c, 0xc0, 0x83, 0x7, 0xf0, 0xe1, 0x1, 0x78, 0x3c, 0x0, 0x3e, 0xf, 0x0, 0xcf, 0x3, 0xc0, 0xf3, 0x0, 0xf0, 0x3c, 0x0, 0x7c, 0xf, 0x80, 0xdf, 0x3, 0xe0, 0xe7, 0x1, 0xfc, 0xf9, 0x80, 0x7f, 0x7c, 0xf0, 0x1e, 0xfe, 0x9f, 0x7, 0xff, 0xe3, 0x1, 0x3f, 0x78, 0x0, 0x0, 0x1e, 0x0, 0xc0, 0x7, 0x0, 0xf0, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xf, 0x0, 0xe0, 0x1, 0x0, 0x78, 0x0, 0x0, 0xf, 0x0, 0xe0, 0x3, 0xe, 0x7e, 0x80, 0xff, 0xf, 0xe0, 0xff, 0x0, 0xe0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x1, 0x0, 0xf8, 0x0, 0x0, 0x7f, 0x0, 0xc0, 0x1f, 0x0, 0xf0, 0x7, 0x0, 0xf8, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x1, 0x0, 0xf8, 0x0, 0x0, 0x7f, 0x0, 0xc0, 0x1f, 0x0, 0xf0, 0x7, 0x0, 0xf8, 0x0, 0x0, 0x1c, 0x0
};

uint8_t *buffer;

void screen_display();
void screen_clear();
uint8_t screen_begin();
void screen_off();
void screen_on();

void screen_draw_inupiaq(uint8_t num, uint8_t offset_x, uint8_t offset_y, bool large);
void screen_draw_decimal(uint8_t num, uint8_t offset_x, uint8_t offset_y);

#endif // DISPLAY_H
